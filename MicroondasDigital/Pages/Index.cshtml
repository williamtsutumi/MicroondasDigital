@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<script>
    var app = angular.module('microondasModule', []);
    app.controller('microondasController', function($scope, $http) {

        $scope.tempo = NaN;
        $scope.potencia = NaN;
        $scope.erro = "";
        $scope.estaAquecendo = false;

        $scope.onInit = function() {
            var request = {
                method: 'GET',
                url: 'http://localhost:5144/Programa/get-programas-padroes'
            };
            $http(request).then(
                function(response) {
                    $scope.programasPadroes = response.data;
                    $scope.programasPadroes.forEach((prog) => {
                        var tempoInt = parseInt(prog.tempo.split(":")[1]) * 60 + parseInt(prog.tempo.split(":")[2]);
                        prog.tempo = tempoInt;
                    });
                },
                function(response) {
                    console.log(response);
                }
            );
        }

        function makeRequest(tempo, potencia) {
            var request = {
                method: 'POST',
                url: 'http://localhost:5144/Microondas/',
                data: {
                    tempo: tempo,
                    potencia: potencia
                }
            };
            if (isNaN(tempo) && isNaN(potencia))
                request.url += "inicio-rapido";
            else if ($scope.estaAquecendo) {
                $scope.progresso = " ";
                request.url += "acrescento";
            }
            else {
                $scope.progresso = " ";
                request.url += "iniciar";
            }
            return request;
        }

        function setAquecimentoInterval(stringAquecimento) {
            if (stringAquecimento === undefined)
                stringAquecimento = '.';

            clearInterval($scope.interval);

            $scope.interval = setInterval(() => {
                $scope.progresso = $scope.progresso + " " + stringAquecimento.repeat($scope.potencia);
                $scope.tempoRestante--;
                console.log($scope.tempoRestante);
                $scope.$apply();
            }, 1000);

            setTimeout(() => {
                clearInterval($scope.interval);
                if ($scope.tempoRestante == 0) {
                    $scope.progresso += " Aquecimento concluído";
                    $scope.estaPausado = false;
                    $scope.estaAquecendo = false;
                    $scope.tempo = NaN;
                    $scope.potencia = NaN;
                }
                $scope.$apply();
            }, 1000 * $scope.tempoRestante);
        }

        $scope.submit = function(programa) {
            $scope.erro = "";

            if ($scope.estaPausado) {
                clearInterval($scope.interval);
                setAquecimentoInterval(programa.stringAquecimento);
                return;
            }

            var request;
            if (programa != undefined)
                request = makeRequest(programa.tempo, programa.potencia);
            else
                request = makeRequest(parseInt($scope.tempo), parseInt($scope.potencia));

            $http(request).then(
                function(response) {
                    var tempoSegundos = parseInt(response.data.tempo.split(":")[2]);
                    var tempoMinutos = parseInt(response.data.tempo.split(":")[1]);
                    var tempoTotal = tempoSegundos + tempoMinutos * 60;
                    $scope.tempoRestante = tempoTotal;

                    if (!$scope.tempo)
                        $scope.tempo = tempoTotal;

                    $scope.potencia = response.data.potencia;
                    $scope.estaAquecendo = true;

                    setAquecimentoInterval(programa.stringAquecimento);
                },
                function() {
                    $scope.erro = "Ocorreu algum erro inesperado!";
                }
            );
        };

        $scope.pausa = function() {
            if ($scope.estaPausado) {
                $scope.estaPausado = false;
                $scope.estaAquecendo = false;
                $scope.progresso = "";
                $scope.tempo = "";
                $scope.potencia = "";
                return;
            }
            if (!$scope.estaAquecendo) {
                $scope.tempo = "";
                $scope.potencia = "";
                return;
            }
            $scope.estaPausado = true;
            $scope.estaAquecendo = false;
            clearInterval($scope.interval);
        }
    });
</script>


<div ng-app="microondasModule" ng-controller="microondasController">
    <form ng-submit="submit()" ng-init="onInit()">
        <div class="row justify-content-between">
            <button ng-repeat="programa in programasPadroes" type="button" class="btn btn-warning col-2" ng-click="submit(programa)">{{ programa.nome }}</button>
        </div>
        <div class="col-12 mt-4">
            <div class="row">
                <label for="tempo">Tempo</label>
                <input id="tempo" type="number" min="1" max="200" placeholder="Informe o tempo (valor entre 1 e 200)" ng-model="tempo"/>
            </div>
            <div class="row">
                <label for="potencia">Potência</label>
                <input id="potencia" type="number" min="1" max="10" placeholder="Informe a potência (valor entre 1 e 10)" ng-model="potencia"/>
            </div>
            <div class="row justify-content-between my-3">
                <button type="button" class="btn btn-danger col-5" ng-click="pausa()">Cancela/Pausa</button>
                <button type="submit" class="btn btn-success col-5">Inicia</button>
            </div>
        </div>
    </form>

    <span class="row" ng-if="estaPausado">Processo de aquecimento pausado!</span>
    <span class="row" ng-if="estaAquecendo">Processo de aquecimento iniciado!</span>
    <span class="row" ng-if="estaAquecendo || estaPausado">Progresso: <span ng-bind="progresso"></span></span>

    <div ng-if="erro.length > 0">
        <span ng-bind="erro"></span>
    </div>
</div>